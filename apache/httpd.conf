ServerRoot "/usr/local/apache2"

LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule reqtimeout_module modules/mod_reqtimeout.so
LoadModule filter_module modules/mod_filter.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule env_module modules/mod_env.so
LoadModule headers_module modules/mod_headers.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule version_module modules/mod_version.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule status_module modules/mod_status.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule wsgi_module modules/mod_wsgi.so
LoadModule ssl_module modules/mod_ssl.so

<IfModule unixd_module>
    User daemon
    Group daemon
</IfModule>

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other 
# <Directory> blocks below.
#
<Directory />
    AllowOverride none
    Require all denied
</Directory>

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#

<Directory "/usr/local/apache2/htdocs">
    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks

    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be "All", "None", or any combination of the keywords:
    #   AllowOverride FileInfo AuthConfig Limit
    #
    AllowOverride None

    #
    # Controls who can get stuff from this server.
    #
    Require all granted
</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html index.php
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being 
# viewed by Web clients. 
#
<Files ".ht*">
    Require all denied
</Files>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog "logs/error_log"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog "logs/access_log" common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog "logs/access_log" combined
</IfModule>

<IfModule alias_module>
    ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
</IfModule>

<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
</Directory>

<IfModule mime_module>
    TypesConfig conf/mime.types

    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
    AddType text/html .php

    AddHandler php-script .php

    AddType application/x-httpd-php-source phps
</IfModule>

<IfModule proxy_html_module>
    Include conf/extra/proxy-html.conf
</IfModule>

# Secure (SSL/TLS) connections
<IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
</IfModule>

<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>

#Django (Python) server comprehension:
Listen 443
ServerName localhost
WSGIPythonPath /home/cpeck1/workspace/tempmon3/tempmon/server/
<VirtualHost *:443>
    WSGIProcessGroup %{GLOBAL}
    WSGIApplicationGroup django
    WSGIScriptAlias / /home/cpeck1/workspace/tempmon3/tempmon/server/server/wsgi.py
    ServerAdmin cpeck1@ualberta.ca
    ServerName 10.13.7.179

    SSLEngine on
    SSLCertificateFile /usr/local/apache2/ssl/localhost.crt
    SSLCertificateKeyFile /usr/local/apache2/ssl/localhost.key
    SSLCACertificateFile /usr/local/apache2/ssl/tempmonCA.crt 


    <Directory /home/cpeck1/workspace/tempmon3/tempmon/server/server/> 
        order deny,allow
	Require all granted
    </Directory>

    <Location "/freezers/">
        AuthType Basic
        AuthName "Authentication required"
        Require valid-user
        AuthBasicProvider wsgi
        WSGIAuthUserScript /home/cpeck1/workspace/tempmon3/tempmon/server/server/wsgi.py
    </Location>

    <Location "/specifications/">
        AuthType Basic
        AuthName "Authentication required"
        Require valid-user
        AuthBasicProvider wsgi
        WSGIAuthUserScript /home/cpeck1/workspace/tempmon3/tempmon/server/server/wsgi.py
    </Location>

     DocumentRoot /home/cpeck1/workspace/tempmon3/tempmon/server/data
     Alias /history /home/cpeck1/workspace/tempmon3/tempmon/server/data

     <Directory /home/cpeck1/workspace/tempmon3/tempmon/server/data>
         Options +Indexes
     </Directory>

     <Location "/history">
         AuthType Basic
	 AuthName "Authentication required"
	 Require valid-user
	 AuthBasicProvider wsgi
        WSGIAuthUserScript /home/cpeck1/workspace/tempmon3/tempmon/server/server/wsgi.py
     </Location>
</VirtualHost>